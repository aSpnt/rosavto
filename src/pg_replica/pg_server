#!/usr/bin/env python

# -*- coding: utf-8 -*-

import os
import sys
import time
import urlparse
import datetime
import codecs
import logging
import xml.etree.ElementTree as et
import ConfigParser
import BaseHTTPServer

HOST_NAME = '127.0.0.1'
PORT_NUMBER = 8000

logger = logging.getLogger('pg_server')
global directory

class MyHandler(BaseHTTPServer.BaseHTTPRequestHandler):
    def do_POST(self):
        length = int(self.headers['Content-Length'])
        post_data = urlparse.parse_qs(self.rfile.read(length))

        xml = post_data['data'][0]

        root = et.fromstring(xml)
        b = root.find('{http://schemas.xmlsoap.org/soap/envelope/}Body')
        tbl = b.find('tbl').text
        ddl = b.find('ddl').text
        sql = b.find('sql').text
        src = b.find('src').text
        dst = b.find('dst').text
        err = b.find('err').text

        cfg = ConfigParser.SafeConfigParser()
        cfg.add_section('changeset')
        cfg.set('changeset', 'table', tbl)
        cfg.set('changeset', 'ddl', ddl)
        cfg.set('changeset', 'sql', sql)
        sfg.set('changeset', 'src', src)
        sfg.set('changeset', 'dst', dst)
        if err != '':
            cfg.add_section('misc')
            cfg.set('misc', 'error', err)

        timestamp = datetime.datetime.now().strftime('%Y-%m-%d %H-%M-%S-%f')
        if err != '':
            directory = os.path.join(directory, 'failed')
            if not os.path.exists(directory):
                try:
                    os.makedirs(directory)
                except OSError, e:
                    if os.path.isdir(directory):
                        pass
                    else:
                        logger.critical('Can not create changesets directory: %s.' % sys.exc_info()[0])
                        sys.exit(1)
        with codecs.open(os.path.join(directory, timestamp + '.changes'),
                'wb', 'utf-8') as changesetFile:
            cfg.write(changesetFile)

        self.send_response(202)
        self.send_header('Accept', 'text/xml')
        self.end_headers()

if __name__ == '__main__':
    logger.setLevel(logging.DEBUG)

    ch = logging.StreamHandler()
    ch.setLevel(logging.ERROR)

    formatter = logging.Formatter(
        '%(asctime)s %(name)s: %(levelname)s: %(message)s',
        datefmt='%b %d %H:%M:%S')
    ch.setFormatter(formatter)
    logger.addHandler(ch)

    config_name = '/etc/pg_replica.conf'
    if not os.path.isfile(config_name):
        logger.critical('Configuration file "%s" not found.' % config_name)
        sys.exit(1)

    cfg = ConfigParser.SafeConfigParser()

    cfg.read(config_name)
    logger.info('Start logging.')

    if cfg.has_section('changes'):
        global directory
        directory = cfg.get('changes', 'dir_name')
        if not os.path.exists(directory):
            try:
                os.makedirs(directory)
            except OSError, e:
                if os.path.isdir(directory):
                    pass
                else:
                    logger.critical('Can not create changesets directory: %s.' % sys.exc_info()[0])
                    sys.exit(1)
    else:
        logger.critical('Changesets directory not found in config file.')
        sys.exit(1)

    server_class = BaseHTTPServer.HTTPServer
    httpd = server_class((HOST_NAME, PORT_NUMBER), MyHandler)

    logger.info('Server Starts - %s:%s' % (HOST_NAME, PORT_NUMBER))

    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        pass
    httpd.server_close()

    logger.info('Server Stops - %s:%s' % (HOST_NAME, PORT_NUMBER))
    logger.info('Stop logging.')
    logging.shutdown()
